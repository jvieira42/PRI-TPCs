<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pr SYSTEM "pr.dtd">
<pr>
    <meta>
        <keyname>PRI1920_TPC6</keyname>
        <title>Servidor NodeJS - MVC</title>
        <subtitle>Relatório do TPC6</subtitle>
        <bdate>4 de Novembro 2019</bdate>
        <edate>11 de Novembro 2019</edate>
        <supervisor>
            <name>José Carlos Ramalho</name>
            <email>jcr@di.uminho.pt</email>
            <homepage>http://www.di.uminho.pt/~jcr</homepage>
        </supervisor>
    </meta>
    <workteam>
        <member>
            <identifier>a76516</identifier>
            <name>João António Cidade Vieira</name>
            <email>a76516@alunos.uminho.pt</email>
            <photo path="photo.jpg"/>
        </member>
    </workteam>
    <abstract>
        <p>
            Neste trabalho, foi proposto tal como no último trabalho, a criação de um servidor em <b>NodeJS</b> utilizando
            a <i>framework</i> <b>ExpressJS</b>. O principal requisito era ter que respeitar o modelo <b>MVC</b>, introduzido
            em aula com os conceitos de <i>Models</i> e <i>Controllers</i>, que permitem realizar a ligação de um servidor
            a uma base de dados, sendo que para este caso utilizou-se a <b>MongoDB NoSQL</b>.
        </p>
        <p>
            O tema requerido consistia na gestão de uma lista de filmes, utilizando um <i>dataset</i> disponibilizado em 
            <b>JSON</b> com as respetivas informações de cada filme.
        </p>
        <p>
            Era necessária a criação de rotas para que o servidor respondesse a pedidos <b>GET</b>, <b>POST</b> e 
            <b>DELETE</b>, de modo a satisfazer as funcionalidades de listagem, inserção/remoção de filmes.
            Para tal foi necessário realizar a ligação à BD e fazer as respetivas <i>querys</i> do <i>Controller</i>, 
            com o auxílio de um <i>script</i> para remoção de filmes na BD.
        </p>
        <p>
            Por fim, para representar e ver toda a informação foi utilizado o motor de templates <b>Pug</b>,
            para gerar dinamicamente as <i>views</i> do servidor. O estilo das páginas foi definido com o auxílio
            da <i>stylesheet</i> <xref url="https://www.w3schools.com/w3css/4/w3.css">w3.css</xref>.
        </p>
    </abstract>
    <deliverables>
        <deliverable path="pr.xml">Project Record XML</deliverable>
        <deliverable path="pr.xsl">Project Record XSLT</deliverable>
        <deliverable path="../gfilmes/">Servidor de Gestão de Filmes</deliverable>
    </deliverables>
</pr>